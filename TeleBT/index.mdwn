[[!meta title="TeleBT"]]
# TeleBT

TeleBT provides the equivalent of a [TeleDongle](../TeleDongle), with
both USB and [Bluetooth](http://www.bluetooth.com) for connection to the 
ground station computer or mobile device.

The RF filter components are set for use in the vicinity of 435 Mhz.

These are photos of the first production version, 1.0.  Maybe someday we'll
get around to adding photos of the current production version 4.0, but they
look pretty similar once they're in the blue box!

<a href="v1.0/telebt-top.jpg"> <img src="v1.0/telebt-top-thumb.jpg"></a>
<a href="v1.0/telebt-bottom.jpg"> <img src="v1.0/telebt-bottom-thumb.jpg"></a>

And here's what it looks like packaged with battery, attached to an Arrow 
3-element yagi, ready for use:

<a href="v1.0/telebt-onyagi.jpg"> <img src="v1.0/telebt-onyagi-thumb.jpg"></a>
<a href="v1.0/telebt-inuse.jpg"> <img src="v1.0/telebt-inuse-thumb.jpg"></a>

For the latest TeleBT firmware and related software, please
visit the [AltOS](../AltOS) and [AltosDroid](../AltosDroid) pages on this 
site.  There is also a compatible iOS application available for sale from our
friends at [Iron Sheep Productions](http://altosui.ironsheep.biz/).

If you're using TeleBT with an [Arrow](http://www.arrowantennas.com/) yagi,
we now have a 3D-printable [mount](mount/) design available!

## Features ##

### User View ###

* 70cm ham-band transceiver compatible with [Altus Metrum](../) products,
  programmed for 38k4 GFSK data rate with forward error correction
* Bluetooth / Bluetooth LE radio
* micro USB interface
* 4 pin Tyco MicroMaTch connector for debug and flash programming
* 850mAh LiPo battery charged via USB 

### Developer View ###

 * [STM32F042](https://www.st.com/content/st_com/en/products/microcontrollers/stm32-32-bit-arm-cortex-mcus/stm32-mainstream-mcus/stm32f0-series/stm32f0x2/stm32f042c6.html) System-on-Chip
    * ARM Cortex-M0 MCU
    * 32k Flash
    * 6k RAM
    * USB 2.0 Full Speed
* [CC1200](http://www.ti.com/product/cc1200) Low Power, High Performance RF Transceiver
* [RN4678](https://www.microchip.com/wwwproducts/en/RN4678) Bluetooth module
* Firmware Features
	* Written mostly in C with some ARM assembler
	* Runs from on-chip flash, uses on-chip RAM
	* USB serial emulation for data interface
* Tools Used
	* [gEDA](http://www.gpleda.org/) for schematic capture and PCB layout
	* [GCC](http://gcc.gnu.org/) compiler and source debugger
* Licenses
	* The hardware is licensed under the [TAPR](http://www.tapr.org) [Open Hardware License](http://www.tapr.org/ohl.html)
	* The software is licensed [GPL version 2](http://www.gnu.org/licenses/old-licenses/gpl-2.0.html)

## Artifacts ##

There is a single manual for all Altus Metrum products,
which is available in [html](../AltOS/doc/altusmetrum.html) and 
[pdf](../AltOS/doc/altusmetrum.pdf) formats.

The hardware design current gEDA files are available from 
[git.gag.com](http://git.gag.com) in the project 
[hw/teleshield](http://git.gag.com/?p=hw/telebt;a=summary).  

For those who don't have ready access to the gEDA suite, here are pdf snapshots
of the files for Production PCB version 4.0 in more easily readable form.  

* [schematic](v4.0/telebt.pdf)
* [pcb artwork](v4.0/telebt.pcb.pdf)
* [bill of materials](v4.0/partslist.csv)

## [History of TeleBT](history) ##

