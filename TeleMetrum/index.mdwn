# TeleMetrum

This is a recording dual-deploy altimeter for high power model rocketry 
with integrated GPS and telemetry link.  

Production units are available from the 
[Garbee and Garbee](http://auric.gag.com) web 
store.  TeleMetrum starter kits are also now available from 
[Apogee Components](http://www.apogeerockets.com/Altus_Metrum_GPS.asp)
and [Australian Rocketry](http://www.ausrocketry.com/shop/index.php?main_page=product_info&cPath=111&products_id=4302).

For the latest TeleMetrum firmware and related ground station software, please
visit the [AltOS](../AltOS) page on this site.

These are photos of our current production version: 

<a href="v1.1/telemetrum-v1.1-thside.jpg"> <img src="v1.1/telemetrum-v1.1-thside-thumb.jpg"></a>
<a href="v1.1/telemetrum-v1.1-smtside.jpg"> <img src="v1.1/telemetrum-v1.1-smtside-thumb.jpg"></a>

## Features ##

### User View ###

* Recording altimeter for model rocketry
* Supports dual deployment (can fire 2 ejection charges)
* 70cm ham-band transceiver for telemetry downlink
* Barometric pressure sensor good to 45k feet MSL
* 1-axis high-g accelerometer for motor characterization
* On-board, integrated GPS receiver
* On-board non-volatile memory for flight data storage
* USB for power, configuration, and data recovery
* Integrated support for LiPo rechargeable batteries
* Uses LiPo to fire e-matches, can be factory modified to support separate pyro battery
* 2.75 x 1 inch board designed to fit inside 29mm airframe coupler tube

### Developer View ###

* Hardware Features
	* [TI CC1111F32](http://focus.ti.com/docs/prod/folders/print/cc1111f32.html) Low Power RF System-on-Chip
		* Sub-1Ghz transceiver
		* 8051 MCU
		* 32k Flash
		* 4k RAM
		* USB 2.0
		* 6 12-bit analog inputs (11 bits with single-ended sensors)
		* 2 channels of serial I/O
		* digital I/O
	* [Winbond W25Q16](http://www.winbond.com/NR/exeres/A3D21C82-A0B6-4586-A770-2F0883A805FF.htm) serial flash memory
		* 2M x 8
		* SPI interface
	* [SkyTraq](http://www.skytraq.com.tw/) Venus634FLPx GPS receiver
		* on-board [Taoglas AP.17A.01](http://www.taoglas.com/antennas/GPS_Antennas/Internal_GPS_-_Active_Patch_Modules/) 
		  single-stage active patch antenna
		* U.FL connector with 3.3V DC can be re-purposed for optional external amplified antennas
		* async serial interface
	* [Freescale MP3H6115A](http://www.freescale.com/webapp/search.partparamdetail.framework?PART_NUMBER=MP3H6115A6U) pressure sensor
	* [Freescale MMA2202EG](http://www.freescale.com/webapp/search.partparamdetail.framework?PART_NUMBER=MMA2202EG) 50g accelerometer.  Can use 40-200g variants!
* Software Features
	* Written mostly in C with some 8051 assembler
	* Runs from on-chip flash, uses on-chip RAM, stores flight data to
		serial DataFlash chip
	* USB serial emulation for "console" interface
* Tools Used
	* [gEDA](http://www.gpleda.org/) for schematic capture and PCB layout
	* [SDCC](http://sdcc.sourceforge.net/) compiler and source debugger
* Licenses
	* The hardware is licensed under the [TAPR](http://www.tapr.org) [Open Hardware License](http://www.tapr.org/ohl.html)
	* The software is licensed [GPL version 2](http://www.gnu.org/licenses/old-licenses/gpl-2.0.html)

## [Production History](../production) ##

## [Flight Logs](flightlogs) ##

## Artifacts ##

There is a single manual for TeleMetrum and all other Altus Metrum products,
which is available in [html](../AltOS/doc/altusmetrum.html) and 
[pdf](../AltOS/doc/altusmetrum.pdf) formats.

The hardware design current gEDA files are available from 
[git.gag.com](http://git.gag.com) in the project 
[hw/telemetrum](http://git.gag.com/?p=hw/telemetrum;a=summary).  

Work on the next version proceeds on the master branch, with occasional
temporary branches created when Bdale is making some major / speculative
change.  Branched with names like 'v0.2' document what we're actually flying 
on the respective PCB revisions.  The 'ground' branch has a cut-down schematic 
used to generate the BOM for partially loading v0.1 boards to used on the 
ground.  We call the on-the-ground version '[TeleDongle](../TeleDongle)', and 
newer versions have their own PCB design.

For those who don't have ready access to the gEDA suite, here are pdf snapshots
of the files for Production PCB version 1.1 in more easily readable form.  

* [schematic](v1.1/telemetrum.pdf)
* [pcb artwork](v1.1/telemetrum.pcb.pdf)
* [bill of materials](v1.1/partslist.csv)

Rockets we know of flying with TeleMetrum boards have exceeded 50g acceleration, 
been well above Mach 1, and reached altitudes 
greater than 25k feet AGL with great results.  Keith's second generation 
ground station program called AltosUI works on Windows, Mac, and Linux systems
and logs telemetry to disk, displays current and max values for key parameters 
during flight, includes voice synthesis during the flight so that 
our eyes can stay on the rockets, and even includes live display of rocket
position over moving maps!  After flight, altosui can extract the 
complete flight log from TeleMetrum, can display plots of the data from either
the telemetry received by radio or the onboard flight log, can output a kml 
file for use with [Google Earth](http://earth.google.com), and can also 
output all the flight data as a csv file for easy import to spreadsheet 
programs or other analysis tools allowing you to perform whatever
custom analysis you can envision!  More details on the software, 
including full source code and pre-built packages
can be found on the [AltOS](../AltOS) page on this site.  Feel free to 
download the software and try it before purchasing our hardware!

## Future Plans ##

TeleMetrum v1.1 meets all of our expectations, except for one mis-placed 
trace also present in v1.0.  The error makes use of a separate pyro battery 
less trivial than intended.  We'll fix that for a future production run.  

## Problems ##

* The CC1111F32 is a 36-pin QFN package, which necessitates reflow 
  soldering.  Since we needed to reflow solder anyway, and because TI used 
  them in their reference design, we went a little crazy and used 0402 
  passive parts everywhere.  That means working under a microscope to 
  place parts!  Without an inspection microscope, loading and testing these
  boards might be impossible.

* The addition of on-board GPS in v0.2 and later boards means that the total 
  power consumption
  can exceed the rate at which we draw power from the USB interface, 
  particularly when the GPS is in cold start mode.  This means a battery must 
  be attached during operation, and also that the battery will only charge 
  effectively from USB when the board is turned off.

## History ##

### v1.0 ###

These are photos of our third version, which was the basis of our first
production build.  These were sold between April and December 2010, and
performed very well.

<a href="v1.0/cimg5972-crop.jpg"> <img src="v1.0/cimg5972-thumb.jpg"></a>
<a href="v1.0/cimg5974-crop.jpg"> <img src="v1.0/cimg5974-thumb.jpg"></a>

The differences between v1.0 and v1.1 were small:

* different flash memory part due to supplier availability problems
* updated reset circuit to improve reliability at temperature extremes
* changed the GPS antenna footprint to eliminate the large through-hole 
  originally intended for use with a passive patch
* irq line eliminated from the companion port
* an additional resistor divider added to allow sampling the 5V supply

The schematics and PCB artwork for this version are on the v1.0 branch in
our git repository, here are pdf copies for easy reference:

* [schematic](v1.0/telemetrum.pdf)
* [pcb artwork](v1.0/telemetrum.pcb.pdf)
* [bill of materials](v1.0/partslist.csv)


### v0.2 ###

These are photos of our second version, which included the integrated Venus
GPS receiver, but with a passive patch antenna that turned out to have 
disappointing performance due to our many PCB geometry constraints.  It also
used a voltage regulator with less capacity which we felt was marginal for
supporting the companion boards we have planned:

<a href="v0.2/cimg5164-cropped.jpg"> <img src="v0.2/cimg5164-thumb.jpg"></a>
<a href="v0.2/cimg5171-cropped.jpg"> <img src="v0.2/cimg5171-thumb.jpg"></a>

Other than cleaning up the silkscreen, the differences between v0.2 and
v1.0 boards were really quite small:

* 100ma LDO regulator instead of the current 150ma part
* no C38 footprint
* different value for C36 reset capacitor

The schematics and PCB artwork for this version are on the v0.2 branch in
our git repository, here are pdf copies for easy reference:

 * [schematic](v0.2/telemetrum.pdf)
 * [pcb artwork](v0.2/telemetrum.pcb.pdf)
 * [bill of materials](v0.2/partslist.csv)

### v0.1 ###

And this is a photo of our original board with serial port for off-board GPS,
without the big off-board 1000uF cap from the original ejection circuit:

<a href="v0.1/loadedpair.jpg"> <img src="v0.1/loadedpair-thumb.jpg"></a>

The differences between v0.1 and later boards were substantial:

* 2.5 x 1 inch board with all parts mounted on one side
* 4-pin PicoBlade serial port connector for attachment of external GPS module 
* USB connector projected approximately 3mm over the edge of the board
* Debug connector used 4 IC socket pins on 100 mil centers
* no companion board interface
* 50ma LDO regulator on early boards, later boards used a 100ma part
* [Microchip 25LC1024](http://www.microchip.com/wwwproducts/Devices.aspx?dDocName=en520389) CMOS serial EEPROM instead of DataFlash
	* 128k x 8
	* SPI interface
* [Microchip MCP9700A](http://www.microchip.com/wwwproducts/Devices.aspx?dDocName=en027103) discrete temperature sensor
* used 1000uF electrolytic capacitor charged to 5V for pyro supply
* two LEDs instead of one attached to CPU

The elimination of the discrete temperature sensor and second LED were
necessary to support the companion board interface added in v0.2.

The v0.1 artwork had three issues, two of which required physical rework
on each board.  All of these issues were fixed in v0.2.

* The USB connector footprint was placed wrong, so that the
  connector hung out over the edge of the board instead of being 
  flush.
* We needed chip select on the SPI memory.  To fix that, we gave up the 
  ability to put the accelerometer into self-test mode and used that 
  GPIO line to pull chip select on the memory, which required two
  cuts and two jumpers.  
* The igniter sense circuits each needed a second resistor to 
  complete the voltage divider so our 3.3V CPU ADC could read the 
  5V ejection voltage.  This was fixed by changing two resistor 
  values, and tacking two additional resistors onto the board
  with jumpers to ground.

The schematics and PCB artwork for this version as of the working-v0.1 tag
are available here are pdf copies for easy reference:

 * [schematic](v0.1/telemetrum.pdf)
 * [pcb artwork](v0.1/telemetrum.pcb.pdf)
 * [bill of materials](v0.1/telemetrum.bom)
